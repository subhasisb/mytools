# Copyright (c) 2023 Altair Engineering Inc.
# All Rights Reserved.
# Copyright notice does not imply publication.
# Contains trade secret, proprietary, and confidential Information.
---
apiVersion: v1
kind: Service
metadata:
  name: pbs-server-svc
  labels:
    name: pbs-server
spec:
  type: LoadBalancer  
  ports:
  - name: comm-port
    port: 17001 
    protocol: TCP
    targetPort: 17001
  - name: batch-port
    port: 15001 
    protocol: TCP
    targetPort: 15001
  selector:
    name: pbs-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pbs-server
  labels:
    name: pbs-server
spec:
  serviceName: pbs-server
  replicas: 1
  selector:
    matchLabels:
      name: pbs-server
  template:
    metadata:
      labels:
        name: pbs-server
        app: wlm
    spec:
      containers:
      - name: pbs-server
        image: docker.io/pbsimage:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 1
        securityContext:
          privileged: true
        command: ["/bin/bash","-c"]
        args:
          - |
            ulimit -n 4096

            munged

            #start ssh server
            nohup /usr/sbin/sshd -D  &
            sleep 10

            sed -i "s/PBS_SERVER=.*/PBS_SERVER=$HOSTNAME/g" /etc/pbs.conf
            useradd pbsdata -m

            echo 'PBS_SUPPORTED_AUTH_METHODS=MUNGE' >> /etc/pbs.conf
            echo 'PBS_AUTH_METHOD=MUNGE' >> /etc/pbs.conf
            echo 'PBS_LOG_HIGHRES_TIMESTAMP=1' >> /etc/pbs.conf
            echo 'PBS_LOG_EVENTS=2047' >> /etc/pbs.conf
            echo 'PBS_COMM_LOG_EVENTS=2047' >> /etc/pbs.conf

            echo LD_LIBRARY_PATH=/usr/lib:/lib64:/opt/pbs/lib >> /var/spool/pbs/pbs_environment
            export LD_LIBRARY_PATH=/usr/lib:/lib64:/opt/pbs/lib

            /etc/init.d/pbs start

            /opt/pbs/bin/qmgr -c "s s auto_create_node_enable=1"
            /opt/pbs/bin/qmgr -c "s s acl_roots=root"
            /opt/pbs/bin/qmgr -c "s s pbs_license_info=6200@10.75.12.133"

            #wait for exit signals
            exec /bin/bash -c "trap : EXIT ; sleep infinity & wait"
        ports:
        - containerPort: 15001
        - containerPort: 17001
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pbs-mom
  labels:
    name: pbs-mom
spec:
  replicas: 10
  selector:
    matchLabels:
      name: pbs-mom
  template:
    metadata:
      labels:
        name: pbs-mom
        app: wlm
    spec:
      containers:
      - name: pbs-mom
        image: docker.io/pbsimage:latest
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 1
        securityContext:
          privileged: true
        command: ["/bin/bash","-c"]
        args:
          - |
            ulimit -n 4096
  
            munged

            #start ssh server
            nohup /usr/sbin/sshd -D  &

            sed -i "s/PBS_SERVER=.*/PBS_SERVER=pbs-server-0/g" /etc/pbs.conf
            sed -i "s/PBS_START_SERVER=.*/PBS_START_SERVER=0/g" /etc/pbs.conf
            sed -i "s/PBS_START_SCHED=.*/PBS_START_SCHED=0/g" /etc/pbs.conf
            sed -i "s/PBS_START_COMM=.*/PBS_START_COMM=0/g" /etc/pbs.conf
            sed -i "s/PBS_START_MOM=.*/PBS_START_MOM=1/g" /etc/pbs.conf
            echo 'PBS_SUPPORTED_AUTH_METHODS=MUNGE' >> /etc/pbs.conf
            echo 'PBS_AUTH_METHOD=MUNGE' >> /etc/pbs.conf
            echo 'PBS_LOG_HIGHRES_TIMESTAMP=1' >> /etc/pbs.conf
            echo '$logevent 0xffffffff' >> /var/spool/pbs/mom_priv/config

            echo LD_LIBRARY_PATH=/usr/lib:/lib64:/opt/pbs/lib >> /var/spool/pbs/pbs_environment
            export LD_LIBRARY_PATH=/usr/lib:/lib64:/opt/pbs/lib

            /etc/init.d/pbs start

            #wait for exit signals
            exec /bin/bash -c "trap : EXIT ; sleep infinity & wait"

